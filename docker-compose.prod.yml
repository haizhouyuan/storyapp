# 生产环境 Docker Compose 覆盖配置
version: '3.8'

services:
  app:
    image: ${DOCKER_IMAGE:-ghcr.io/haizhouyuan/storyapp:main}
    environment:
      - NODE_ENV=production
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_API_URL=${DEEPSEEK_API_URL:-https://api.deepseek.com}
      - MONGODB_URI=mongodb://mongo:27017/storyapp
      - MONGODB_DB_NAME=storyapp
      - PORT=5000
      - FRONTEND_URL=https://storyapp.dandanbaba.xyz
      - LOG_LEVEL=info
      - ENABLE_DETAILED_LOGGING=true
      - ENABLE_DB_LOGGING=true
      - LOG_RETENTION_DAYS=30
      - METRICS_ENABLED=true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mongo:
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    ports: []  # 生产环境不暴露数据库端口到主机
    volumes:
      - mongo_data_prod:/data/db
      - ./backup:/backup  # 备份目录
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 生产环境添加 Nginx 反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

volumes:
  mongo_data_prod:
    driver: local

networks:
  default:
    driver: bridge