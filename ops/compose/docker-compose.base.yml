# StoryApp Docker Compose 基础配置
# 包含所有环境的公共配置

name: storyapp

# 网络配置
networks:
  storyapp-net:
    driver: bridge
    labels:
      - "project=storyapp"

# 数据卷配置
volumes:
  mongo_data:
    driver: local
    labels:
      - "project=storyapp"
  app_logs:
    driver: local
    labels:
      - "project=storyapp"
  app_uploads:
    driver: local
    labels:
      - "project=storyapp"

# 基础服务配置
services:
  # MongoDB 数据库服务
  mongo:
    image: mongo:6.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-storyapp}
    volumes:
      - mongo_data:/data/db
      - ../../scripts/mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - storyapp-net
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' | grep 1"]
      interval: 15s
      timeout: 5s
      retries: 12
      start_period: 30s
    labels:
      - "project=storyapp"
      - "service=database"

  # 应用服务基础配置
  app:
    build:
      context: ../..  # 相对于compose文件的路径
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ../../.env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${APP_PORT:-5000}
      - MONGODB_URI=mongodb://${MONGO_USER:-admin}:${MONGO_PASS:-password123}@mongo:27017/${MONGO_DB:-storyapp}?authSource=admin
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_API_URL=${DEEPSEEK_API_URL:-https://api.deepseek.com}
    volumes:
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    networks:
      - storyapp-net
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://127.0.0.1:${APP_PORT:-5000}/healthz', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))\""]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 45s
    labels:
      - "project=storyapp"
      - "service=application"

  # Nginx 反向代理服务（可选）
  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      - storyapp-net
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "project=storyapp"
      - "service=proxy"
    # 端口和配置在环境特定文件中覆盖
    profiles:
      - nginx  # 默认不启动，需要显式启用