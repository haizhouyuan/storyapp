# 生产环境配置
# 高可用、安全、性能优化

name: storyapp-prod

services:
  mongo:
    container_name: storyapp-prod-mongo
    # 生产环境不暴露数据库端口
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-storyapp}
    # 生产环境额外配置
    command: --auth --bind_ip_all --quiet
    labels:
      - "env=production"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 主应用实例
  app:
    container_name: storyapp-prod-app
    build:
      args:
        NODE_ENV: production
    # 生产环境不直接暴露应用端口，通过nginx访问
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASS}@mongo:27017/${MONGO_DB:-storyapp}?authSource=admin
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          memory: 256M
    labels:
      - "env=production"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://127.0.0.1:5000/healthz', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # 蓝绿部署的第二个应用实例
  app-green:
    container_name: storyapp-prod-app-green
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASS}@mongo:27017/${MONGO_DB:-storyapp}?authSource=admin
    volumes:
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    networks:
      - storyapp-net
    depends_on:
      mongo:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          memory: 256M
    labels:
      - "env=production"
      - "deployment=green"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://127.0.0.1:5000/healthz', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    profiles:
      - green  # 蓝绿部署时启用

  # 生产环境Nginx
  nginx:
    container_name: storyapp-prod-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/conf.d/production.conf:/etc/nginx/conf.d/default.conf:ro
      - ../../certs:/etc/nginx/certs:ro
    environment:
      - UPSTREAM_SERVER=app:5000
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          memory: 128M
    labels:
      - "env=production"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 生产环境日志收集
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: storyapp-prod-fluentd
    volumes:
      - ../logging/fluentd.conf:/fluentd/etc/fluent.conf:ro
      - app_logs:/app/logs:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - storyapp-net
    profiles:
      - logging
    labels:
      - "env=production"
      - "service=logging"