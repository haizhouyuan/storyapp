# StoryApp Docker Compose 基座配置
# 符合 ultrathink 理念：公共基座 + 环境差异 override

name: storyapp

# 公共网络配置
networks:
  storyapp-net:
    driver: bridge

# 公共数据卷配置  
volumes:
  mongo_data:
    driver: local
  app_logs:
    driver: local
  app_uploads:
    driver: local

# 服务基座配置（仅包含公共部分）
services:
  # MongoDB 数据库服务
  mongo:
    image: mongo:6.0
    container_name: storyapp-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS:-pass123}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-storyapp}
    volumes:
      - mongo_data:/data/db
    networks:
      - storyapp-net
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' | grep 1"]
      interval: 15s
      timeout: 5s
      retries: 12

  # 应用服务基座（镜像和命令在 override 中指定）
  app:
    container_name: storyapp-app
    # 镜像在 override 中指定
    env_file:
      - .env
    environment:
      - PORT=5000
      - MONGODB_URI=mongodb://${MONGO_USER:-root}:${MONGO_PASS:-pass123}@mongo:27017/${MONGO_DB:-storyapp}?authSource=admin
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    networks:
      - storyapp-net
    restart: unless-stopped
    ports:
      - "${APP_PORT:-5000}:5000"
    # 统一健康检查端点（后端需要实现 /healthz）
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://127.0.0.1:' + (process.env.PORT||5000) + '/healthz').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 15s
      timeout: 5s
      retries: 10

  # Nginx 反向代理（可选服务）
  nginx:
    image: nginx:1.27-alpine
    container_name: storyapp-nginx
    restart: unless-stopped
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./ops/nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      - storyapp-net
    ports:
      - "${WEB_PORT:-80}:80"
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - nginx  # 仅在需要 nginx 时启动