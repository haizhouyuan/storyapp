name: CI (Lint · Typecheck · Test · Build)
on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v4

      - name: Use Node 20 with caching
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install root dependencies
        run: npm ci --prefer-offline --no-audit --no-fund

      - name: Install backend dependencies
        run: cd backend && npm ci --prefer-offline --no-audit --no-fund

      - name: Install frontend dependencies
        run: cd frontend && npm ci --prefer-offline --no-audit --no-fund

      - name: Lint backend
        run: cd backend && npm run lint --if-present

      - name: Lint frontend
        run: cd frontend && npm run lint --if-present

      - name: Typecheck backend
        run: cd backend && (npm run typecheck --if-present || npx tsc -p . --noEmit)

      - name: Typecheck frontend
        run: cd frontend && (npm run typecheck --if-present || npx tsc -p . --noEmit)

      - name: Backend Unit Tests
        run: cd backend && npm test --if-present -- --ci --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT: junit.xml

      - name: Frontend Unit Tests
        run: cd frontend && npm test --if-present -- --coverage --watchAll=false --ci
        env:
          CI: true

      - name: Build backend
        run: cd backend && npm run build --if-present

      - name: Build frontend
        run: cd frontend && npm run build --if-present

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            backend/junit.xml
            frontend/coverage/**
            backend/coverage/**

  e2e-tests:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: |
            package-lock.json
            backend/package-lock.json
            frontend/package-lock.json
    
      - name: Install dependencies
        run: |
          npm ci --prefer-offline --no-audit --no-fund
          cd backend && npm ci --prefer-offline --no-audit --no-fund
          cd ../frontend && npm ci --prefer-offline --no-audit --no-fund
    
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
        
      - name: Run E2E tests
        run: npm test --if-present
        env:
          CI: true
          
      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  claude_review:
    needs: [ci, e2e-tests]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    env:
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      ANTHROPIC_BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: Claude Code Review
        uses: anthropics/claude-code-action@v1
        env: # 再加一层 step 级 env 保险
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ANTHROPIC_BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
