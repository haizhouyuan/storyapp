name: Codex Autofix on CI failure

on:
  workflow_run:
    # 必须与主 CI workflow 的 name 保持一致
    workflows: ["CI/CD Pipeline"]
    types: [completed]

jobs:
  autofix:
    if: >
      ${{ github.event.workflow_run.conclusion == 'failure' &&
          github.event.workflow_run.event == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    timeout-minutes: 20

    steps:
      - name: Determine PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const run = context.payload.workflow_run;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const headBranch = run.head_branch;
            const headSha = run.head_sha;

            // 根据 head 分支查找对应的开放 PR
            const { data: prs } = await github.rest.pulls.list({ owner, repo, head: `${owner}:${headBranch}`, state: 'open' });
            if (!prs || prs.length === 0) {
              core.setFailed(`No open PR found for branch ${headBranch}`);
              return;
            }
            const pr = prs[0];
            core.setOutput('number', pr.number.toString());
            core.setOutput('head_ref', pr.head.ref);
            core.setOutput('base_ref', pr.base.ref);
            core.setOutput('head_sha', headSha);

      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr.outputs.head_ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies (root)
        run: npm ci

      - name: Build shared/backend/frontend (best effort)
        run: |
          npm run -w shared build || true
          npm run -w backend build || true
          npm run -w frontend build || true

      - name: Install Codex CLI
        if: ${{ secrets.OPENAI_API_KEY != '' }}
        run: npm i -g @openai/codex

      - name: Prepare Codex plan
        id: prepare-plan
        if: ${{ secrets.OPENAI_API_KEY != '' }}
        run: |
          cat > codex-plan.md << 'EOF'
          请阅读仓库根的 AGENTS.md、.github/workflows、package.json 的 scripts，并按项目预期构建/测试顺序执行：
          1) npm ci
          2) npm run -w shared build （若存在）
          3) npm run -w backend build
          4) npm run -w frontend build
          5) npm run -w backend test

          如果测试失败：
          - 定位最小根因，做最小且聚焦的修改
          - 必要时补充/修正测试，确保测试通过
          - 保持 TypeScript/ESLint 规范，不要大范围重构
          完成后用提交信息："codex: autofix"。
          EOF

      - name: Run Codex autofix
        id: codex
        if: ${{ secrets.OPENAI_API_KEY != '' }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -e
          echo "🔧 Running Codex autofix..."
          codex exec "读取 codex-plan.md；依次执行安装/构建/测试，若失败则最小化修复并提交；完成后再次验证测试通过。"

      - name: Fallback lint fixes (if Codex not configured)
        if: ${{ steps.codex.outcome == 'skipped' || steps.codex.outcome == 'failure' }}
        run: |
          echo "🔧 Applying fallback lint:fix where available..."
          cd backend && npm run lint:fix --if-present || true
          cd ..
          cd frontend && npm run lint:fix --if-present || true
          cd ..

      - name: Commit changes (if any)
        id: commit
        run: |
          if ! git diff --quiet; then
            git config user.email "action@github.com"
            git config user.name "Codex Autofix"
            git add -A
            git commit -m "codex: autofix"
            echo "committed=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to commit"
            echo "committed=false" >> $GITHUB_OUTPUT
          fi

      - name: Push changes back to PR branch
        if: ${{ steps.commit.outputs.committed == 'true' }}
        run: |
          BRANCH="${{ steps.pr.outputs.head_ref }}"
          REPO="${{ github.repository }}"
          if [ -n "${{ secrets.CI_PAT }}" ]; then
            echo "Using CI_PAT to push (will retrigger CI)"
            git push https://x-access-token:${{ secrets.CI_PAT }}@github.com/${REPO}.git "$BRANCH"
          else
            echo "CI_PAT not set; pushing with default token (may not retrigger downstream workflows)"
            git push origin "$BRANCH"
          fi

      - name: Post result comment to PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const number = parseInt(core.getInput('pr_number')) || parseInt('${{ steps.pr.outputs.number }}');
            const committed = '${{ steps.commit.outputs.committed }}' === 'true';
            const codexOutcome = '${{ steps.codex.outcome || 'skipped' }}';
            const msg = committed
              ? `✅ Codex Autofix: 已提交修复并推送（Codex步骤：${codexOutcome}）。CI 将自动重跑。`
              : `🔍 Codex Autofix: 无需修复或无法自动修复（Codex步骤：${codexOutcome}）。请查看 CI 日志与变更。`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: number,
              body: msg
            });
